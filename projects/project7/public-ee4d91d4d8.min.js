(function($){
	$.ratyli = function(el, options){
		var base = this;
		base.$el = $(el);
		base.el = el;
		
		base.$el.data("ratyli", base);
		
		base.init = function(){
			// extend with parameters
			base.options = $.extend({},$.ratyli.defaultOptions, options);
			
			// extend with html5 dataset
			base.options =$.extend({},base.options,base.$el.data());
			
			// for the loop
			base.set(base.options.rate,true);
			
			// event listeners for rating signs
			base.$el.on("click","span",function(e){
				if(!base.options.disable){
					var target= e.target;
					if(target.tagName!="SPAN") target=target.parentNode;
					
					base.options.onSignClick.call(base,target);
					var val=$(target).prevAll().length+1;
					
					base.set(val);
				}
			});
			
			base.$el.on("mouseenter","span",function(e){
				var target= e.target;
				if(target.tagName!="SPAN") target=target.parentNode;
				
				if(!base.options.disable){
					$(target).addClass("rate-active");
					$(target).prevAll().addClass("rate-active");
				}
				base.options.onSignEnter.apply(null,[base.options.rate,target]);
			});
			
			base.$el.on("mouseleave","span",function(e){
				var target= e.target;
				if(target.tagName!="SPAN") target=target.parentNode;
				
				if(!base.options.disable){
					$(target).removeClass("rate-active");
					$(target).prevAll().removeClass("rate-active");
				}
				base.options.onSignLeave.apply(null,[base.options.rate,target]);
			});
			
		};
		
		base.set=function(val,init){
			if(val<0 || (val % 1 != 0) || val>base.options.ratemax) val=0; // reset to 0.
			
			if(val==1 && base.options.rate==1 && base.options.unrateable==true && !init){
				val=0;
			}
			
			base.options.rate=val;
			
			// reset html
			base.$el.html("");
			
			// set data-rate
			if (base.options.rate!=0) base.$el.attr("data-rate",base.options.rate);
			
			// set data-ratemax
			base.$el.attr("data-ratemax",base.options.ratemax);
			
			
			// generate signs
			var i=0;
			while (i < base.options.ratemax) {
				var tmp="";
				if(i<base.options.rate){
					tmp=base.signTemplate("full");
				}else{
					tmp=base.signTemplate("empty");
				}
				base.$el.append(tmp);
				i++;
			}
			
			// set rated
			if(!init && !base.options.disable){
				base.$el.addClass("rated");
				base.$el.attr("data-rate",val);
			}
			
			//rated callack
			base.options.onRated.call(base,val,init);
			
			return base.options.rate;
		};
		
		
		base.signTemplate=function(type){
			return "<span class='icon icon-star-"+type+"' style='cursor:"+base.options.cursor+";'></span>";//"+base.options[type]+"
		};
		
		base.init();
		
	};
	
	$.ratyli.defaultOptions = {
		disable: false,
		unrateable: false,
		full: "★",
		empty: "☆",
		cursor:"default",
		rate:0,
		ratemax:5,
		onSignEnter:function(){},
		onSignLeave:function(){},
		onSignClick:function(){},
		onRated:function(){}
	};
	
	$.fn.ratyli = function(options){
		return this.each(function(){
			(new $.ratyli(this, options));
		});
	};
	
})(Zepto);

;(function($){
	$.tool = {
		getUrl:function(name){
			var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
			var r = window.location.search.substr(1).match(reg);
			if (r != null) return unescape(r[2]); return null;
		},
		isEmptyObject:function(e) {
			var t;
			for (t in e)
				return !1;
			return !0
		},
		load:function(url,p){
			p = typeof(p) == 'undefined'?'':'?'+p;
			
			var pm = location.search,
				pm_s = p==''?pm:pm.replace('?','&');
			
			$.router.load(url+p+pm_s);
		},
		zreoFormet:function(transVal){
			return transVal < 10?'0'+transVal:transVal;
		},
		secondsFormet:function(transData){
			transData = parseInt(transData);
			
			if(transData < 0){
				return;
			}
			
			var one_hour  = 60 * 60,
				one_minute = 60,
				hour,minute,second = 0;
			
			hour= Math.floor(transData / one_hour);
			minute= Math.floor(transData % one_hour /  one_minute);
			second= Math.floor(transData % one_hour %  one_minute);
			
			
			if(transData < one_minute){
				return '00:'+this.zreoFormet(transData);
			}else if(transData >= one_minute && transData < one_hour){
				if(second > 0){
					return this.zreoFormet(minute)+":"+this.zreoFormet(second);
				}else{
					return this.zreoFormet(minute)+":00";
				}
			}else{
				if(second > 0){
					return  this.zreoFormet(hour)+":"+this.zreoFormet(minute)+":"+this.zreoFormet(second);
				}else if(second == 0 && minute >0){
					return  this.zreoFormet(hour)+":"+this.zreoFormet(minute);
				}else{
					return  this.zreoFormet(hour);
				}
			}
		},
		minuteFormet:function(transData){
			var d = transData.split(':'),iL=d.length,v=0;
			if(iL == 2){
				v = parseInt(d[0])*60+parseInt(d[1]);
			}else if(iL == 3){
				v = parseInt(d[0])*60*60+parseInt(d[1])*60+parseInt(d[2]);
			}
			
			return v;
		},
		typeFormet:function(transVal){
			return Object.prototype.toString.call(transVal).slice(8,-1);
		}
	}
})(Zepto);

;
(function ($) {
	var zl = {
		pageId : $('.page').attr('id'),
		loading : false,
		collectData : [],
		orderData : [],
		vadioCourseData : [],
		paymentData : [],
		kefuData : [],
		paymentType : true,
		swiperProblem : '',
		swiper_problem_parm : {},
		ques_num : 0,
		page_num : {},
		exam_type : '1',
		typeOr : {1 : 'radio',2 : 'checkbox'},
		estimationStart : 5,
		questionData:[],
		maxQuestionExpire:7*24*3600*1000,//ms
		subjectCacheKey:'__app_subject_cache_key__',
		pageIdStart : function (pageId) {
			switch (pageId) {
				case 'page-main':
					zl.mainModel();
					break;
				case 'page-category':
					if ($.tool.getUrl('subject_type') == 0) {
						$('.category .bar-nav').find('.pull-left,.pull-right').hide();
					} else {
						$('.category .bar-nav').find('.pull-left,.pull-right').show();
					}
					zl.categoryModel();
					break;
				case 'page-estimation':
					$(".raty").ratyli({
						onRated : function (value, init) {
							// rating callback
							if (!init)
								zl.estimationStart = value; // prevent run at init
						},
					});
					
					if (zl.orderData.length <= 0) {
						zl.orderModel(function () {
							zl.estimation.or();
						});
					} else {
						zl.estimation.or();
					}
					break;
				case 'page-center':
					zl.userModel();
					zl.orderModel();
					zl.collectModel();
					break;
				case 'page-order':
					if (zl.orderData.length <= 0) {
						zl.orderModel(zl.order.list);
					} else {
						zl.order.list();
					}
					break;
				case 'page-collect':
					if (zl.collectData.length <= 0) {
						zl.collectModel(zl.collect.list);
					} else {
						zl.collect.list();
					}
					break;
				case 'page-payment':
					if (zl.vadioCourseData.length <= 0) {
						zl.vadioCourseModel(zl.paymentModel);
					} else {
						zl.paymentModel();
					}
					
					$('#subOrder').one('click', function () {
						$.zl.paymentModelPay();
					});
					break;
				case 'page-problem':
					zl.problemModel();
					break;
				case 'page-vadio-course':
					zl.kefuModel();
					zl.vadioPlayHeight();
					zl.vadioCourseModel();
					zl.estimationModel();
					
					$('.content').scrollTop(0);
					break;
				case 'page-vadio-list':
					zl.vadioList();
					break;
				case 'page-question':
					if (zl.question.initialSubject() == false) {
						return;
					}
					zl.questionModel();
					zl.videoListModel();
					break;
				case 'page-problem-collect':
					zl.problemCollectModel();
					break;
				case 'page-question-part':
					zl.question.list();
					break;
				case 'page-kefu':
					break;
			}
		},
		vadioPlayHeight : function () {
			var w = parseFloat($('body').width());
			
			$('.vadio-play-content,.vadio-play-real').css({
				width : w + 'px',
				height : (w / 1.8) + 'px'
			});
		},
		mainModel : function () {
			$.ajax({
				url : '/wxpub/api/recommend',
				type : 'GET',
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						var data = json.data;
						
						//bannner创建
						zl.main.banner(data.banners);
						//视频列表
						zl.main.list(data.industry_courses);
					}
				}
			});
		},
		vadioList : function () {
			$.ajax({
				url : '/wxpub/api/course',
				type : 'GET',
				data : {
					subject_id : $.tool.getUrl('subject_id')
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.vadio.list(json.data);
					}
				}
			});
		},
		vadioCourseModel : function (transFun) {
			$.ajax({
				url : '/wxpub/api/course_video',
				type : 'GET',
				data : {
					course_id : $.tool.getUrl('course_id')
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						var data = json.data;
						
						zl.vadioCourseData = data;
						
						if (typeof(transFun) != 'undefined') {
							transFun.call();
						} else {
							zl.vadio.course(data);
							zl.vadio.paly(data);
						}
					}
				}
			});
		},
		activation : function () {
			var value = $('#promptCode').val();
			$.ajax({
				url : '/wxpub/api/code',
				type : 'GET',
				data : {
					code : value
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						var data = json.data,
							code = {
								0 : '激活码无效',
								2 : '已使用',
								3 : '已使用',
								4 : '已使用',
								5 : '已使用'
							};
						if (data.status != 1) {
							$.toast(code[data.status]);
						} else {
							$.confirm('课程：' + data.body + '', '请确认激活信息？', function () {
								zl.activationCallBack(value);
							});
						}
					} else {
						$.toast(json.errmsg);
					}
				}
			});
		},
		activationCallBack : function (value) {
			$.ajax({
				url : '/wxpub/api/activation',
				type : 'POST',
				data : {
					code : value
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						$.toast("激活成功，2秒后跳转...");
						
						setTimeout(function () {
							$.tool.load('/public/wxpub/page/order.html', 'pay=2');
						}, 2000);
					} else {
						$.toast(json.errmsg);
					}
				}
			});
		},
		userModel : function (transFun) {
			$.ajax({
				url : '/wxpub/api/user_info',
				type : 'GET',
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						var data = json.data;
						
						$('#userName').text(data.nickname);
						$('#userHeadIco').attr('src', data.headimgurl);
						zl.center.proxyCommodity(data.commoditys);
					}
				}
			});
		},
		orderModel : function (transFun) {
			$.ajax({
				url : '/wxpub/api/order',
				type : 'GET',
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.orderData = json.data;
						
						if (typeof(transFun) != 'undefined') {
							transFun.call();
						} else {
							$('#orderTotle').text(json.data.length);
						}
					}
				}
			});
		},
		collectModel : function (transFun) {
			$.ajax({
				url : '/wxpub/api/store',
				type : 'GET',
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.collectData = json.data;
						
						if (typeof(transFun) != 'undefined') {
							transFun.call();
						} else {
							$('#collectTotle').text(json.data.length);
						}
					}
				}
			});
		},
		categoryModel : function () {
			var cache = localStorage.getItem(zl.subjectCacheKey);
			if (cache != null) {
				cache = JSON.parse(cache);
				if (typeof(cache) != 'object') {
					zl.category.list(json.data);
				}
			}
			$.ajax({
				url : '/wxpub/api/subject_all',
				type : 'GET',
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						localStorage.setItem(zl.subjectCacheKey,JSON.stringify(json.data));
						zl.category.list(json.data);
					}
				}
			});
		},
		paymentModel : function () {
			var l = zl.vadioCourseData;
			zl.payment.main(l);
			
			$.ajax({
				url : '/wxpub/api/recommend_course',
				type : 'GET',
				data : {
					subject_id : l.subject_id,
					course_id : l.id
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.payment.minor(json.data);
					}
				}
			});
		},
		paymentParme : function () {
			var p = $('#paymentMinor input[name="payment"]'),
				o = {};
			for (var i = 0, iLen = p.length; i < iLen; i++) {
				if ($(p[i]).is(':checked')) {
					o[$(p[i]).attr('product_id')] = 1;
				}
			}
			return o;
		},
		paymentModelPay : function () {
			$.showPreloader('支付跳转中...');
			
			var val = this.paymentParme(),
				product_union = $.tool.isEmptyObject(val) ? '' : JSON.stringify(val);
			
			$.ajax({
				url : '/wxpub/pay/jsapi_order',
				type : 'POST',
				data : {
					product_id : $('#paymentMain input[name="payment"]').attr('product_id'),
					product_num : 1,
					product_union : product_union
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						$.hidePreloader();
						
						zl.paymentType = true;
						zl.paymentData = json.data;
						zl.callpay();
					} else {
						$.toast(json.errmsg);
					}
				}
			});
		},
		callpay : function (transI) {
			if (typeof(transI) != 'undefined') {
				var payParam = $.zl.orderData[transI];
				if (payParam.channel != 'wxpub') {
					$.toast("该订单不支持微信公众号支付");
					return;
				}
				if (typeof(payParam) != 'object' && typeof(payParam.channel_prepay) != 'string') {
					$.toast("支付失败或订单超期，请重新下单购买");
					return;
				}
				var prepay = JSON.parse(payParam.channel_prepay);
				if (typeof(prepay) != 'object') {
					$.toast("支付失败或订单超期，请重新下单购买");
					return;
				}
				if (typeof(prepay.prepayid) != 'undefined') {
					$.toast("请在之了课堂APP里面完成该订单支付");
					return;
				}
				
				zl.paymentType = false;
				zl.paymentData = $.zl.orderData[transI].channel_prepay;
				
			}
			
			if (typeof WeixinJSBridge == "undefined") {
				if (document.addEventListener) {
					document.addEventListener('WeixinJSBridgeReady', zl.jsApiCall, false);
				} else if (document.attachEvent) {
					document.attachEvent('WeixinJSBridgeReady', zl.jsApiCall);
					document.attachEvent('onWeixinJSBridgeReady', zl.jsApiCall);
				}
			} else {
				this.jsApiCall();
			}
		},
		jsApiCall : function () {
			var data = Object.prototype.toString.call(zl.paymentData).slice(8, -1) == 'String' ? JSON.parse(zl.paymentData) : zl.paymentData;
			
			WeixinJSBridge.invoke(
				'getBrandWCPayRequest',
				data,
				function (res) {
					var ta = !zl.paymentType ? '' : ',两秒后跳转...';
					if (res.err_msg == "get_brand_wcpay_request:ok") {
						$.toast("支付成功" + ta);
					} else if (res.err_msg == "get_brand_wcpay_request:cancel") {
						$.toast("支付取消" + ta);
					} else {
						$.toast("支付失败" + ta);
					}
					
					if (!zl.paymentType) {
						return false;
					}
					
					if (res.err_msg == "get_brand_wcpay_request:ok") {
						setTimeout(function () {
							$.tool.load('/public/wxpub/page/order.html', 'pay=2');
						}, 2000);
					} else {
						setTimeout(function () {
							$.tool.load('/public/wxpub/page/order.html', 'pay=1');
						}, 2000);
					}
				});
		},
		estimationModel : function (transPage, transType) {
			$.ajax({
				url : '/wxpub/api/comment',
				type : 'GET',
				data : {
					course_id : $.tool.getUrl('course_id'),
					page : transPage || 1
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.estimation.list(json.data, transType);
					}
				}
			});
		},
		estimationSave : function () {
			$.ajax({
				url : '/wxpub/api/comment',
				type : 'POST',
				data : {
					trade_no : $.tool.getUrl('trade_no'),
					score : zl.estimationStart,
					comment : $('#estimationContent').val().trim(),
					anonymous : ($('input[name=estimationNo]').is(':checked') ? 1 : 0)
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						$.toast("评价成功");
						$.router.back();
					} else {
						$.toast(json.errmsg);
					}
				}
			});
		},
		kefuModel : function () {
			zl.kefu.init();
			/*$.ajax({
			 url : '/wxpub/api/kefu',
			 type : 'GET',
			 dataType : "json",
			 success : function (json) {
			 if (json.errcode == '0') {
			 zl.kefuData = json.data;
			 
			 }
			 }
			 });*/
		},
		questionModel : function () {
			var cacheSubject = zl.question.cacheSubject();
			if (cacheSubject == false) {
				return;
			}
			$.ajax({
				url : '/wxpub/api/simulation',
				type : 'GET',
				data : {
					subject_id : cacheSubject.subject_id
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.questionData = json.data;
						//zl.question.list(json.data);
					}
				}
			});
		},
		problemModel : function () {
			var exam_id = $.tool.getUrl('exam_id');
			
			$.showIndicator();
			
			var lastCache = localStorage.getItem("question" + exam_id);
			var expireTime = localStorage.getItem("question_expire_" + exam_id);
			if (lastCache != null) {//本地有缓存
				if (expireTime != null && (((new Date().getTime()) - expireTime) < zl.maxQuestionExpire)) {//有expire时间戳
					zl.problemModelInit(eval('(' + lastCache + ')'));
					return;
				}
			}
			
			$.ajax({
				url : '/wxpub/api/exam_question',
				type : 'GET',
				data : {
					exam_id : exam_id
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						localStorage.setItem("question" + exam_id, JSON.stringify(json));
						localStorage.setItem("question_expire_" + exam_id,new Date().getTime());
						zl.problemModelInit(json);
					}
				}
			});
		},
		problemModelInit : function (transJson) {
			zl.exam_type = transJson.data.exam_type;
			if (zl.exam_type == '1') {
				$('#submitTip').hide();
				$('#submitData').show();
			}
			
			$('#exam_name').text(transJson.data.exam_name);
			
			zl.problem.list(transJson.data.parts);
			
			$.hideIndicator();
		},
		delOrder : function (transPro) {
			$.confirm('确定删除选中订单?', function () {
				zl.delOrderCall(transPro);
			});
		},
		delOrderCall : function (transPro) {
			$.ajax({
				url : '/wxpub/api/order_delete',
				type : 'POST',
				data : {
					trade_pno : transPro
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.orderModel(zl.order.list);
						$.toast("操作成功");
					} else {
						$.toast(json.errmsg);
					}
				}
			});
		},
		problemCollectModel : function () {
			var type = $.tool.getUrl('record_type'),
				subject_id = $.tool.getUrl('subject_id'),
				question_id;
			
			if (type == '0') {
				$('#headProblem').text('收藏题目');
				question_id = localStorage.getItem('collectProblem' + subject_id);
			} else {
				$('#headProblem').text('错题本');
				question_id = localStorage.getItem('errorProblem' + subject_id);
			}
			if (question_id == null) {
				$.toast('亲，暂时没有'+$('#headProblem').text()+'记录！');
				return;
			}
			$.ajax({
				url : '/wxpub/api/question',
				type : 'POST',
				data : {
					question_id : question_id.split(',')
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						zl.problemCollect.list(json.data);
					} else {
						$.toast(json.errmsg);
					}
				}
			});
		},
		videoListModel:function() {
			var cacheSubject = zl.question.cacheSubject();
			if (cacheSubject == false) {
				return;
			}
			$.ajax({
				url : "/app/api/profession_course",
				type : 'GET',
				data : {
					subject_id : cacheSubject.subject_id
				},
				dataType : "json",
				success : function (json) {
					if ("0" == json.errcode) {
						$.zl.question.relativeCourse(json.data);
					}
				}
			});
		}
	};
	
	/* 首页 */
	zl.main = {
		bannerW : function () {
			var w = parseFloat($('body').width());
			
			$('.swiper-main').css({
				height : (w / 2.5) + 'px'
			});
		},
		banner : function (transData) {
			if ($('#vadioBanner *').length > 0) {
				return;
			}
			var h = '<div class="swiper-container swiper-con-extend swiper-main"><div class="swiper-wrapper">';
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				h += '<a class="swiper-slide" href="' + transData[i].url + '"><img src="' + transData[i].cover_url + '"/></a>';
			}
			h += '</div><div class="swiper-pagination"></div></div>';
			
			$('#vadioBanner').html(h);
			zl.main.bannerW();
			
			//初始化焦点图
			/* $('.swiper-main').swiper({
			 speed : 300,
			 pagination : ".swiper-pagination",
			 paginationClickable : true
			 }); */
			
			var swiperMain = new Swiper('.swiper-main', {
				speed : 300,
				pagination : ".swiper-pagination",
				paginationClickable : true
			});
		},
		list : function (transData) {
			var h = '';
			
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				var list = transData[i].recommend_courses;
				if (typeof(list) != 'object' || list.length == 0) {
					continue;
				}
				h += '<div class="card card-main"><div class="card-header">' + transData[i].industry_name + '</div><div class="card-content row">';
				for (var j = 0, jLen = list.length; j < jLen; j++) {
					if (j == 0) {
						h += '	<a class="col-100 item-link" href="page/vadioCourse.html?course_id=' + list[j].id + '">';
						h += '		<img src="' + list[j].cover_url + '"/>';
						h += '		<li>' + list[j].course_name + '</li>';
						h += '		<li class="card-main-des">';
						var color = list[j].is_free == 0 ? "color-org" : "color-grn";
						h += '			<span class="' + color + '">' + (list[j].is_free == 0 ? "￥" + list[j].price / 100 : "免费") + '</span>';
						h += '			<span class="icon icon-friends">' + list[j].statistics + '</span>';
						h += '		</li>';
						h += '	</a>';
					} else {
						h += '	<a class="col-50 item-link" href="page/vadioCourse.html?course_id=' + list[j].id + '">';
						h += '		<img src="' + list[j].cover_url + '"/>';
						h += '		<li>' + list[j].course_name + '</li>';
						h += '		<li class="card-main-des">';
						var color = list[j].is_free == 0 ? "color-org" : "color-grn";
						h += '			<span class="' + color + '">' + (list[j].is_free == 0 ? "￥" + list[j].price / 100 : "免费") + '</span>';
						h += '			<span class="icon icon-friends">' + list[j].statistics + '</span>';
						h += '		</li>';
						h += '	</a>';
					}
				}
				h += '</div><div class="card-footer"></div></div>';
			}
			
			$('#vadioCardList').html(h);
		}
	};
	
	/* 收藏 */
	zl.collect = {
		list : function () {
			var transData = zl.collectData,
				h = '<ul>';
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				h += '<li>';
				h += '<a class="item-content" href="../page/vadioCourse.html?course_id=' + transData[i].id + '">';
				h += '	<div class="item-media">';
				h += '		<img style="height: 2.4rem;" src="' + transData[i].cover_url + '">';
				h += '	</div>';
				h += '	<div class="item-inner">';
				h += '		<div class="item-text">' + transData[i].course_name + '</div>';
				h += '		<div class="item-title-row">';
				h += '			<div class="item-title color-gr">分类：' + transData[i].subject_name + '</div>';
				var color = transData[i].is_free == 0 ? "color-org" : "color-grn";
				h += '			<div class="item-after ' + color + '">' + (transData[i].is_free == 0 ? "￥" + transData[i].price / 100 : "免费") + '</div>';
				h += '		</div>';
				h += '	</div>';
				h += '</a>';
				h += '</li>';
			}
			h += '</ul>';
			
			$('#collectList').html(h);
		},
		start : function (transThis) {
			var text = $(transThis),
				is_store = text.attr('is_store') == '0' ? '1' : '0';
			
			$.ajax({
				url : '/wxpub/api/store',
				type : 'POST',
				data : {
					course_id : $.tool.getUrl('course_id'),
					is_store : is_store
				},
				dataType : "json",
				success : function (json) {
					if (json.errcode == '0') {
						var n = is_store == '1' ? '1' : '0',
							s = is_store == '1' ? 'icon-star-full' : 'icon-star-empty';
						
						text.attr('is_store', n).find('.icon')
							.removeClass('icon-star-empty icon-star-full').addClass(s);
						
						$.toast("操作成功");
					}
				}
			});
		}
	};
	
	/* 订单 */
	zl.order = {
		list : function () {
			var transData = zl.orderData,
				all = '',
				no = '',
				yes = '';
			
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				all += $.zl.order.table(transData[i], i);
				
				if (transData[i].status == 0 && transData[i].channel != 'code') {
					no += $.zl.order.table(transData[i], i);
				}
				
				if (transData[i].status == 1 || transData[i].channel == 'code') {
					yes += $.zl.order.table(transData[i], i);
				}
			}
			
			$('#order1').html(all);
			$('#order2').html(no);
			$('#order3').html(yes);
			
			$('.buttons-tab a').eq($.tool.getUrl('pay')).click();
		},
		table : function (transData, transI) {
			var h = '',
				stas = {
					0 : '待激活',
					1 : '已激活',
					2 : '退款',
					3 : '订单超期'
				},
				orderType = {
					1 : '课程',
					2 : '题库'
				},
				comment = {
					0 : '未评价',
					1 : '已评价'
				};
			
			h += '<div class="card">';
			h += '	<div class="card-header">订单号：' + transData.trade_pno + '</div>';
			h += '	<div class="card-content">';
			h += '		<div class="list-block media-list">';
			h += '			<ul>';
			h += '				<li>';
			h += '				  <a class="item-content" href="javascript:$.zl.order.operateMenu(\'' + transData.status + '\',\'' + transData.resource_id + '\',\'' + transData.trade_no + '\',\'' + transData.is_comment + '\',\'' + transI +  '\',\'' + transData.product_type +  '\',\'' + transData.subject_id +'\')">';
			/* h += '					<div class="item-media">';
			 h += '						<img style="height: 2.4rem;" src="">';
			 h += '					</div>'; */
			h += '					<div class="item-inner">';
			h += '						<div class="item-text">' + transData.body + '</div>';
			h += '						<div class="item-title-row">';
			h += '							<div class="item-title color-gr">' + orderType[transData.product_type] + '</div>';
			h += '							<div class="item-after color-org">￥' + transData.product_price / 100 + '</div>';
			h += '						</div>';
			h += '					</div>';
			h += '				  </a>';
			h += '				</li>';
			
			var childData = typeof(transData.child_order) == 'undefined' ? [] : transData.child_order;
			
			for (var j = 0, jLen = childData.length; j < jLen; j++) {
				h += '				<li>';
				h += '				  <a class="item-content" href="javascript:$.zl.order.operateMenu(\'' + transData.status + '\',\'' + childData[j].resource_id + '\',\'' + childData[j].trade_no + '\',\'' + childData[j].is_comment + '\',\'' + transI+ '\',\'' + childData[j].product_type+ '\',\'' + childData[j].subject_id + '\')">';
				/* h += '					<div class="item-media">';
				 h += '						<img style="height: 2.4rem;" src="">';
				 h += '					</div>'; */
				h += '					<div class="item-inner">';
				h += '						<div class="item-text">' + childData[j].body + '</div>';
				h += '						<div class="item-title-row">';
				h += '							<div class="item-title color-gr">' + orderType[childData[j].product_type] + '</div>';
				var price = childData[j].product_price / 100;
				h += '							<div class="item-after color-org">￥' + price + '</div>';
				h += '						</div>';
				h += '					</div>';
				h += '				  </a>';
				h += '				</li>';
			}
			h += '			</ul>';
			h += '		</div>';
			h += '	</div>';
			h += '	<div class="card-footer">';
			var color_f = transData.status == '1' || transData.channel == 'code' ? 'color-blue' : 'color-org';
			h += '		<span class="pull-left ' + color_f + '">' + (transData.channel == 'code' ? '赠送' : stas[transData.status]) + '</span>';
			h += this.payBtn(transData, transI);
			h += '	</div>';
			h += '</div>';
			
			return h;
		},
		operateMenu : function (transStatus, transId, transNo, transIsComment, transI,producyType,subjectId) {
			if (producyType == '2') {//题库
				$.tool.load('../page/category.html', 'subject_type=' + 0);
				return;
			}
			if (transStatus == '1' && transIsComment == '0') {//课程
				var buttons1 = [{
					text : '请选择',
					label : true
				}, {
					text : '观看',
					onClick : function () {
						$.tool.load('../page/vadioCourse.html', 'course_id=' + transId + '');
					}
				}, {
					text : '评价',
					onClick : function () {
						$.tool.load('../page/estimation.html', 'trade_no=' + transNo + '&n=' + transI + '');
					}
				}
				];
				var buttons2 = [{
					text : '取消'
				}
				];
				var groups = [buttons1, buttons2];
				
				$.actions(groups);
			} else {
				$.tool.load('../page/vadioCourse.html', 'course_id=' + transId + '');
			}
		},
		payBtn : function (transData, transI) {
			var h = '';
			
			switch (transData.status) {
				case '0':
					h += '<a href="javascript:$.zl.delOrder(\'' + transData.trade_pno + '\');" class="button button-danger button-fill pull-right">删除</a>';
					h += '<a href="javascript:$.zl.callpay(\'' + transI + '\');" class="button button-warning button-fill pull-right">付款</a>';
					break;
				case '3':
					h = '<a href="#" class="button button-warning button-fill pull-right">重新下单</a>';
					break;
			}
			
			h = transData.channel == 'code' ? '' : h;
			
			/* if(transData.status == '1' && transData.is_comment == '0'){
			 h+='<a href="../page/estimation.html&trade_no='+transData.trade_no+'" class="button button-warning button-fill pull-right">评价</a>';
			 } */
			
			return h;
		}
	};
	
	/* 分类 */
	zl.category = {
		list : function (transData) {
			var k = 0,
				btn = '',tabs = '';
			btn  += '<div class="buttons-tab">';
			tabs += '<div class="content-block">';
			tabs += '	<div class="tabs">';
			for (var list in transData) {
				var ac = k == 0 ? 'active' : '';
				btn  += '	<a href="#category' + k + '" class="tab-link ' + ac + ' button" onclick="$.zl.category.showTab($(this));">' + list + '</a>';
				tabs += '		<div id="category' + k + '" class="tab '+ac+'">';
				var list1 = transData[list];
				for (var list2 in list1) {
					tabs += '			<div class="content-block-title">' + list2 + '</div>';
					tabs += '			<div class="list-block row">';
					var list3 = list1[list2];
					for (var i = 0, iLen = list3.length; i < iLen; i++) {
						var u = '';
						if ($.tool.getUrl('subject_type') == 0) {
							u = '../page/question.html?subject_id=' + list3[i].subject_id + '';
						} else {
							u = '../page/vadioList.html?subject_id=' + list3[i].subject_id + '';
						}
						
						tabs+= '<a class="button button-sm button-fill button-light col-50" href="' + u + '"><label>' + list3[i].subject_name + '</label></a>';
					}
					tabs += '			</div>';
				}
				tabs += '		</div>';
				
				k++;
			}
			btn  += '</div>';
			tabs += '</div>';
			
			$('#categoryList').html(btn+tabs);
		},
		showTab:function(a) {
			var href = a.attr('href');
			$('.buttons-tab .active').removeClass('active');
			$('.content-block .active').removeClass('active');
			a.addClass('active');
			$(href).addClass('active');
		}
	};
	
	/* 视频 */
	zl.vadio = {
		list : function (transData) {
			var h = '<div class="card-content row">';
			
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				h += '<a class="col-50" href="../page/vadioCourse.html?course_id=' + transData[i].id + '">';
				h += '		<img src="' + transData[i].cover_url + '"/>';
				h += '		<li>' + transData[i].course_name + '</li>';
				h += '		<li class="card-main-des">';
				var color = transData[i].is_free == 0 ? "color-org" : "color-grn";
				h += '			<span class="' + color + '">' + (transData[i].is_free == 0 ? "￥" + transData[i].price / 100 : "免费") + '</span>';
				h += '			<span class="icon icon-friends">' + transData[i].statistics + '</span>';
				h += '		</li>';
				
			}
			h += '</div>';
			
			$('#vadioList').html(h);
		},
		course : function (transData) {
			this.vadioPlayList(transData);
			this.collectIs(transData);
			this.details(transData);
			this.vadioInfo(transData);
			this.evaluate(transData);
		},
		vadioPlayListFormet : function (transData) {
			var o = {};
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				var group_name = transData[i].group_name == '' ? 'no_group_name' : transData[i].group_name;
				if (typeof(o[group_name]) != 'object') {
					o[group_name] = [];
				}
				
				var a = o[group_name];
				a.push(transData[i]);
			}
			
			return o;
		},
		vadioPlayList : function (transData) {
			var h = '',
				transDList = zl.vadio.vadioPlayListFormet(transData.videos);
			
			if (transData.is_purchased == 0) {
				$('.vadio-play-img').show();
				$('.vadio-play-real').hide();
			} else {
				$('.vadio-play-img').hide();
				$('.vadio-play-real').show();
			}
			var video_href = false;
			for (var k in transDList) {
				if (k == 'no_group_name') {
					continue;
				}
				
				h += '<li class="accordion-item"><a class="item-link item-content" href="#">';
				h += '	<div class="item-inner"> ';
				h += '		<div class="item-title">' + k + '</div>';
				h += '	</div></a>';
				h += '	<div class="accordion-item-content">';
				h += '		<div class="list-block">';
				h += '			<ul>';
				var transArry = transDList[k];
				
				for (var i = 0, iLen = transArry.length; i < iLen; i++) {
					var icon = typeof(transArry[i].url) != 'undefined' ? 'play' : 'lock',
						href = typeof(transArry[i].url) != 'undefined' ? transArry[i].url : '0',
						idi = transArry[i].id + '' + transData.id + '' + i,
						id = transData.id,
						play = typeof(localStorage['palyIcon' + id]) != 'undefined' ? localStorage['palyIcon' + id] == idi ? 'icon-bofang-play' : '' : '',
						vadioTime = '';
					
					if (video_href == false && href != '0') {
						video_href = href;
					}
					
					var timeText = '';
					if (transData.is_purchased == 1 || transArry[i].is_free == 1) {
						timeText = typeof(localStorage['vadioTimePlay' + idi]) == 'undefined' ? '' : localStorage['vadioTimePlay' + idi];
						
						vadioTime = '<span id="vadioTimePlay' + idi + '">' + timeText + '</span><span>' + $.tool.secondsFormet(transArry[i].duration) + '</span>';
					}
					h += '<li>';
					h += '  <a class="item-content" href="#" onclick="$.zl.vadio.vadioPlayOpen(\'' + id + '\',\'' + idi + '\',\'' + href + '\',\'' + timeText.replace('/', '') + '\')">';
					h += '	<div class="item-media"><i id="vadioStartPlay' + idi + '" class="icon icon-' + icon + ' ' + play + '"></i></div>';
					h += '	<div class="item-inner">';
					h += '		<div class="item-title">' + transArry[i].video_name + '</div>';
					h += '		<div class="item-after">' + vadioTime + '</div>';
					h += '	</div>';
					h += '  </a>';
					h += '</li>';
				}
				h += '			</ul>';
				h += '		</div>';
				h += '	</div>';
				h += '</li>';
			}
			
			var transArryNo = typeof(transDList.no_group_name) == 'undefined' ? [] : transDList.no_group_name;
			
			for (var i = 0, iLen = transArryNo.length; i < iLen; i++) {
				var icon = typeof(transArryNo[i].url) != 'undefined' ? 'play' : 'lock',
					href = typeof(transArryNo[i].url) != 'undefined' ? transArryNo[i].url : '0',
					idi = transArryNo[i].id + '' + transData.id + '' + i,
					id = transData.id,
					play = typeof(localStorage['palyIcon' + id]) != 'undefined' ? localStorage['palyIcon' + id] == idi ? 'icon-bofang-play' : '' : '',
					vadioTime = '';
				console.debug('Group_name'+href+';video_href:'+video_href);
				if (video_href == false && href != '0') {
					video_href = href;
				}
				
				var timeText = '';
				if (transData.is_purchased == 1 || transArryNo[i].is_free == 1) {
					timeText = typeof(localStorage['vadioTimePlay' + idi]) == 'undefined' ? '' : localStorage['vadioTimePlay' + idi];
					
					vadioTime = '<span id="vadioTimePlay' + idi + '">' + timeText + '</span><span>' + $.tool.secondsFormet(transArryNo[i].duration) + '</span>';
				}
				
				h += '<li>';
				h += '  <a class="item-content" href="#" onclick="$.zl.vadio.vadioPlayOpen(\'' + id + '\',\'' + idi + '\',\'' + href + '\',\'' + timeText.replace('/', '') + '\')">';
				h += '	<div class="item-media"><i id="vadioStartPlay' + idi + '" class="icon icon-' + icon + ' ' + play + '"></i></div>';
				h += '	<div class="item-inner">';
				h += '		<div class="item-title">' + transArryNo[i].video_name + '</div>';
				h += '		<div class="item-after">' + vadioTime + '</div>';
				h += '	</div>';
				h += '  </a>';
				h += '</li>';
			}
			if (video_href != false) {
				$('#vadio-play-real-mp').attr('src', video_href);
				
				$('.vadio-play-img').hide();
				$('.vadio-play-real').show();
			}
			$('#vadioPlayList').html(h);
		},
		vadioPlayOpen : function (transId, transIdi, transUrl, transInit) {
			if (transUrl == '0') {
				$.toast("请激活后观看");
			} else {
				var obj = document.getElementById("vadio-play-real-mp");
				obj.src = transUrl;
				obj.onprogress = $.toast("视频获取中，请稍候...");
				//obj.onerror = $.toast("视频获取失败，请检查网络是否正常");
				obj.autoplay = true;
				obj.load();
				
				$('#vadioPlayList i').removeClass('icon-bofang-play');
				$('#vadioStartPlay' + transIdi).addClass('icon-bofang-play');
				
				localStorage['palyIcon' + transId] = transIdi;
				
				obj.addEventListener('timeupdate', function () {
					var text = $.tool.secondsFormet(obj.currentTime) + '/';
					
					localStorage['vadioTimePlay' + transIdi] = text;
					
					$('#vadioTimePlay' + transIdi).text(text);
				});
			}
		},
		vadioInfo : function (transData) {
			var price = transData.is_purchased == 2 ? transData.code_price : transData.price;
			
			$('#vadioName').text(transData.course_name);
			$('#vadioPrice').html(zl.payment.priceFormet(transData, price));
			$('#vadioPlay').text(transData.statistics);
		},
		collectIs : function (transData) {
			var n = typeof(transData.is_store) == 'undefined' ? 0 : transData.is_store,
				s = transData.is_store == '1' ? 'icon-star-full' : 'icon-star-empty';
			
			$('#starAIndex').attr('is_store', n).find('.icon')
				.removeClass('icon-star-empty icon-star-full').addClass(s);
		},
		details : function (transData) {
			$('#vadioDetails').html(transData.description);
		},
		evaluate : function (transData) {
			if (transData.is_free == 1) {
				$('.activation_on,.activation_of,.activation_all').hide();
				$('.activation_noPrice').show();
			} else {
				if (transData.is_purchased == 1) {
					$('.activation_on,#starAIndex').show();
					$('.activation_of').hide();
				} else if (transData.is_purchased == 0) {
					$('.activation_on').hide();
					$('.activation_of,#starAIndex').show();
				} else if (transData.is_purchased == 2) {
					$('.activation_on,.activation_of,#starAIndex').hide();
					$('.activation_all').show();
				}
			}
		},
		paly : function (transData) {
			$('.vadio-play-img').html('<img src="' + transData.cover_url + '"/>');
			$('#vadio-play-real-mp').attr('poster', transData.cover_url);
		}
	};
	
	/* 购物车 */
	zl.payment = {
		main : function (transData) {
			var price = transData.price;
			
			var h = '<input type="checkbox" name="payment" checked disabled product_id="' + transData.product_id + '" price="' + price + '" initial_price="' + transData.initial_price + '"/>';
			h += '<div class="item-media">';
			/* h +='	<i class="icon icon-form-checkbox"></i>'; */
			h += '	<img style="height: 2.4rem;" src="' + transData.cover_url + '">';
			h += '</div>';
			h += '<div class="item-inner">';
			h += '	<div class="item-text">' + transData.course_name + '</div>';
			h += '	<div class="item-title-row">';
			h += '		<div class="item-title color-gr">分类：' + transData.subject_name + '</div>';
			h += '		<div class="item-after color-org">' + this.priceFormet(transData, price) + '</div>';
			h += '	</div>';
			h += '</div>';
			$('#totalPay').text('合计：¥' + price / 100 + '').attr('price', price);
			var initial_price = transData.initial_price - price;
			$('#preferential').text('优惠：¥' + initial_price / 100 + '').attr('initial_price', initial_price);
			
			$('#paymentMain').html(h);
		},
		minor : function (transData) {
			var h = '<ul>';
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				h += '<li>';
				h += '	<label class="label-checkbox item-content">';
				h += '		<input type="checkbox" name="payment" product_id="' + transData[i].product_id + '" price="' + transData[i].discount + '" initial_price="' + transData[i].initial_price + '">';
				h += '		<div class="item-media">';
				h += '			<i class="icon icon-form-checkbox"></i>';
				h += '			<img style="height: 2.4rem;" src="' + transData[i].cover_url + '">';
				h += '		</div>';
				h += '		<div class="item-inner">';
				h += '			<div class="item-text">' + transData[i].course_name + '</div>';
				h += '			<div class="item-title-row">';
				h += '				<div class="item-title color-gr">分类：' + transData[i].subject_name + '</div>';
				h += '				<div class="item-after color-org">' + this.priceFormet(transData[i], transData[i].discount) + '</div>';
				h += '			</div>';
				h += '		</div>';
				h += '	</label>';
				h += '</li>';
			}
			h += '</ul>';
			
			if (iLen > 0) {
				$('.content-block-title').show();
			}
			
			$('#paymentMinor').html(h);
			
			this.joinPay();
		},
		priceFormet : function (transData, transPrice) {
			var price = transPrice / 100;
			return transData.initial_price / 100 == price ?
				'<span class="item-price" price="' + price + '">¥' + price + '</span>' :
				'<span class="item-initial-price">¥' + transData.initial_price / 100 + '</span><span class="item-price" price="' + price + '">¥' + price + '</span>';
		},
		joinPay : function () {
			$('.payment .list-block').on('change', 'input[name="payment"]', function () {
				var in_total = parseInt($('#totalPay').attr('price')),
					in_preferential = parseInt($('#preferential').attr('initial_price')),
					
					check_total = parseInt($(this).attr('price')),
					check_preferential = parseInt($(this).attr('initial_price')) - check_total,
					
					total = in_total + check_total,
					preferential = in_preferential + check_preferential,
					
					total_j = in_total - check_total,
					preferential_j = in_preferential - check_preferential;
				
				if ($(this).is(':checked')) {
					$('#totalPay').text('合计：¥' + total / 100 + '').attr('price', total);
					$('#preferential').text('优惠：¥' + preferential / 100 + '').attr('initial_price', preferential);
				} else {
					$('#totalPay').text('合计：¥' + total_j / 100 + '').attr('price', total_j);
					$('#preferential').text('优惠：¥' + preferential_j / 100 + '').attr('initial_price', preferential_j);
				}
			})
		}
	};
	
	/* 课程评论列表 */
	zl.estimation = {
		list : function (transD, transType) {
			var h = '',
				transData = transD.comments;
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				h += '<div class="card facebook-card">';
				h += '	<div class="card-header no-border">';
				h += '		<div class="facebook-avatar"><img width="45" src="' + transData[i].headimgurl + '"></div>';
				h += '		<div class="facebook-name">';
				h += '			<span>' + transData[i].nickname + '</span>';
				h += '			<span class="pull-right color-org2">';
				for (var j = 1; j <= 5; j++) {
					if (j <= transData[i].score) {
						h += '		<span class="icon icon-star-full"></span>';
					} else {
						h += '		<span class="icon icon-star-empty"></span>';
					}
				}
				h += '			</span>';
				h += '		</div>';
				h += '		<div class="facebook-date">' + transData[i].comment + '</div>';
				h += '	</div>';
				h += '</div>';
			}
			
			$('#estimationTotal').text('课程评价（' + transD.total + '）').attr('num', transD.total);
			if (transType) {
				$('#estimationList').append(h);
			} else {
				$('#estimationList').html(h);
			}
			
			$.zl.loading = false;
		},
		or : function () {
			var n = $.tool.getUrl('n'),
				data = zl.orderData[n];
			
			$('#nameBody').text(data.body);
			$('#subject_name').text('分类：' + data.subject_name);
			$('#product_price').text('¥' + data.product_price / 100);
		}
	};
	
	/* QQ客服 */
	zl.kefu = {
		init : function () {
			$('.course').on('click', '#starKefu', function () {
				$.tool.load('../page/kefu.html');
				/*var transData = zl.kefuData;
				 
				 if (transData.length > 1) {
				 var buttons1 = [{
				 text : '请选择',
				 label : true
				 }
				 ];
				 for (var i = 0, iLen = transData.length; i < iLen; i++) {
				 buttons1.push({
				 text : 'QQ客服' + i,
				 onClick : function () {
				 location.href = 'http://wpa.qq.com/msgrd?v=3&uin=' + transData[i] + '&site=qq&menu=yes';
				 }
				 });
				 }
				 var buttons2 = [{
				 text : '取消'
				 }
				 ];
				 var groups = [buttons1, buttons2];
				 
				 $.actions(groups);
				 } else if (transData.length == 1) {
				 location.href = 'http://wpa.qq.com/msgrd?v=3&uin=' + transData[0] + '&site=qq&menu=yes';
				 }*/
			});
		}
	}
	
	/* 试题列表 */
	zl.question = {
		typeMap :{"章节练习":"lianxi","模拟试卷":"zhen","历年真题":"moni","预测试卷":"yati"},
		cacheKey:'__app_cache_subject__',
		initialSubject:function() {
			var curSubject = zl.question.cacheSubject(true);
			if (curSubject == false) {
				return false;
			}
			var cache = localStorage.getItem(zl.subjectCacheKey);
			if (cache == null) {
				return true;
			}
			var industry = JSON.parse(cache);
			if (typeof(industry) != 'object') {
				return true;
			}
			for (var ik in industry) {
				var profession = industry[ik];
				for (var pk in profession) {
					var subjects = profession[pk];
					for (var sk = 0; sk < subjects.length;sk++) {
						if (subjects[sk].subject_id == curSubject.subject_id) {
							$('.question header .title').text(subjects[sk].subject_name);
							break;
						}
					}
				}
			}
			return true;
		},
		cacheSubject:function(isUrl) {
			if (typeof(isUrl) !='undefined' && isUrl) {
				var subject_id = $.tool.getUrl('subject_id');
				if (subject_id != null) {
					var subject = {subject_id:subject_id};
					localStorage.setItem(zl.question.cacheKey,JSON.stringify(subject));
					return subject;
				}
			}
			var lastCache = localStorage.getItem(zl.question.cacheKey);
			var subject = typeof(lastCache) == 'string'?JSON.parse(lastCache):null;
			if (typeof(subject) != "object" || subject == null) {
				$.tool.load('category.html','subject_type=0');
				return false;
			}
			return subject;
		},
		questionPart:function(tag) {
			var key = $(tag).find('.tab-label').text();
			var count = 0;
			for (var k in zl.questionData) {
				if (k == key) {
					$.tool.load('question_part.html','index='+count+'&icon='+zl.question.typeMap[k]);
					return;
				}
				count++;
			}
			if (count == 0) {
				$.toast("请刷新页面获取题库");
			} else {
				$.toast("亲，该科目暂时没有"+key);
			}
		},
		createCard:function (list,title) {
			var h = '';
			if (list.length == 0) {
				return h;
			}
			h += '<div class="card card-main"><div class="card-header">'+title+'</div><div class="card-content row">';
			for (var j = 0, jLen = list.length; j < jLen; j++) {
				h += "  <a class=\"col-100 item-link\" onclick=\"$.tool.load('../page/vadioCourse.html','course_id=" + list[j].id + "');\">";
				h += '      <img src="' +list[j].cover_url + '"/>';
				h += '      <li>' + list[j].course_name + '</li>';
				h += '      <li class="card-main-des">';
				var color = list[j].is_free == 0 ? "color-org" : "color-grn";
				h += '          <span class="' + color + '">' + (list[j].is_free == 0 ? "￥" + list[j].price / 100 : "免费") + '</span>';
				h += '          <span class="icon icon-friends">' + list[j].statistics + '</span>';
				h += '      </li>';
				h += '  </a>';
			}
			h += '</div><div class="card-footer"></div></div>';
			return h;
		},
		relativeCourse:function(transData) {
			var h = '';
			if (typeof(transData.recommend) != 'object' || (transData.buy.length == 0 && transData.recommend.length == 0)) {
				h += '<div class="card card-main"><div class="card-header">推荐课程</div>';
				h += '<div style="text-align:center;margin-top:0.8rem;">暂时没有相关专业课程，敬请期待！</div>'
				h += '<div class="card-footer" style="height:1rem;"></div></div>';
				$('#courseList').html(h);
				return;
			}
			h += zl.question.createCard(transData.buy,'我的课程');
			h += zl.question.createCard(transData.recommend,'推荐课程');
			$('#courseList').html(h);
		},
		questionListFormet : function (transData) {
			var o = {};
			if (typeof(transData) != 'object') {
				return o;
			}
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				var group_name = '';
				if (typeof(transData[i].group_name) != 'string' || transData[i].group_name == '') {
					group_name = 'no_group_name';
				} else {
					group_name = transData[i].group_name;
				}
				if (typeof(o[group_name]) != 'object') {
					o[group_name] = [];
				}
				
				var a = o[group_name];
				a.push(transData[i]);
			}
			
			return o;
		},
		questionList: function (transArry,type) {
			if (typeof(transArry) != 'object') {
				return '';
			}
			var record_id = '',h='';
			for (var i = 0, iLen = transArry.length; i < iLen; i++) {
				var is_free = Number(transArry[i].is_free);
				h += '            <li>';
				h += '              <a class="item-link item-content" data-no-cache="true" onclick="javascript:$.zl.question.exam(' + (is_free?transArry[i].exam_id:0) +');">';
				h += '                <div class="item-inner"> ';
				h += '                  <div class="item-title"><i style="margin-right:10px;" class="icon '+(is_free?'icon-unlock color-org':'icon-lock')+'"></i>' + transArry[i].exam_name + '</div>';
				if (type=='章节练习') {
					var record_id = localStorage.getItem('recordProblem' + transArry[i].exam_id);
					record_id = (record_id==null?0:record_id)+'/';
				}
				h += '                  <div class="item-after">' + record_id+transArry[i].count + '道</div>';
				h += '                </div>';
				h += '              </a>';
				h += '            </li>';
			}
			return h;
		},
		list : function () {
			var h = '<ul>';
			var index = $.tool.getUrl('index');
			var icon = $.tool.getUrl('icon');
			var transDList = [];
			var name = '',count =0;;
			for (var kid in zl.questionData) {
				if (count == index) {
					name = kid;
					transDList = zl.question.questionListFormet(zl.questionData[name]);
					break;
				}
				count++;
			}
			if (name == '') {
				return;
			}
			$('header .title').text(name);
			for (var kk in transDList) {
				if (kk == 'no_group_name') {
					continue;
				}
				h += '<li class="accordion-item"><a class="item-link item-content" href="#">';
				h += '  <div class="item-media"><span class="q-b q-b-' + index + '"><i class="icon icon-' + icon + '"></i></span></div> ';
				h += '  <div class="item-inner"> ';
				h += '      <div class="item-title">' + kk + '</div>';
				h += '  </div></a>';
				h += '  <div class="accordion-item-content">';
				h += '      <div class="list-block">';
				h += '          <ul>';
				h += zl.question.questionList(transDList[kk],name);
				h += '      	</ul>';
				h += '      </div>';
				h += '  </div>';
				h += '</li>';
			}
			if (typeof(transDList.no_group_name) == 'object') {
				h += zl.question.questionList(transDList.no_group_name,name);
			}
			h += '</ul>';
			$('#questionList').html(h);
		},
		exam:function(exam_id) {
			if (exam_id == 0) {
				$.toast("请激活对应题库或课程");
				return;
			}
			$.tool.load('../page/problem.html', 'exam_id=' + exam_id);
		},
		questionStore:function() {
			var subject = zl.question.cacheSubject();
			if (subject == false) {
				$.toast("请选择科目");
				return;
			}
			$.tool.load('../page/problem_collect.html', 'record_type=0&subject_id='+subject.subject_id);
		},
		questionCuoti:function() {
			var subject = zl.question.cacheSubject();
			if (subject == false) {
				$.toast("请选择科目");
				return;
			}
			$.tool.load('../page/problem_collect.html', 'record_type=1&subject_id='+subject.subject_id);
		}
	}
	
	/* 试题解析 */
	zl.problem = {
		/*list1 : function (transData) {
		 var h = '<div class="swiper-wrapper">',
		 slide_page = -1,
		 child_page = -1;
		 
		 zl.ques_num = 0;
		 zl.page_num = {};
		 
		 for (var i = 0, iLen = transData.length; i < iLen; i++) {
		 var questions = transData[i].questions;
		 if (questions == null || questions.length == 0) {
		 continue;
		 }
		 for (var j = 0, jLen = questions.length; j < jLen; j++) {
		 var question_id = questions[j].question_id;
		 h += '<div class="swiper-slide" question_id="' + question_id + '">';
		 
		 if (j == 0) {
		 h += '	<div class="content-block-title">' + transData[i].title + '</div>';
		 }
		 
		 /!* 选项 *!/
		 var options = eval('(' + questions[j].options + ')'),
		 type = questions[j].type,
		 l = 0,
		 arrayCheck = type == '3'?true:false;/!*$.tool.typeFormet(options) == 'Array'*!/;
		 
		 zl.ques_num++;
		 slide_page++;
		 
		 h += '	<div class="list-block media-list">';
		 h += '		<ul>';
		 /!* 题目 *!/
		 h += '			<li class="item-content">';
		 h += '				<div class="item-inner">' + (arrayCheck ? '' : ((zl.exam_type != '1'?zl.ques_num:(j + 1)) + '、')) + questions[j].description;
		 if (zl.exam_type == '1' && (type == '4' || type == '2')) {
		 h += '				<div style="margin-top:10px;"><a href="#" class="button button-danger button-fill pull-left" id="multi-answer">查看答案</a></div>';
		 }
		 h += '				</div>';
		 h += '			</li>';
		 
		 
		 if (arrayCheck) {
		 zl.ques_num--;
		 child_page++;
		 h += '<div class="swiper-container swiper-problem-options"><div class="swiper-wrapper">';
		 } else {
		 zl.page_num[zl.ques_num] = [slide_page, questions[j].answer,type];
		 }
		 if (type != '4') {//非简答题
		 for (var k in options) {
		 if (type == '1' || type == '2') {
		 h += '			<li>';
		 h += '				<label class="label-checkbox item-content">';
		 h += '					<input type="' + zl.typeOr[type] + '" name="problem' + zl.ques_num + '" data-order="' + zl.ques_num + '" data-type="1" value="' + k + '"  question_id="' + question_id + '"  question_type="'+type+'">';
		 h += '					<div class="item-media"><i class="icon icon-form-checkbox">' + k + '</i></div>';
		 h += '					<div class="item-inner">';
		 h += options[k];
		 h += '					</div>';
		 h += '				</label>';
		 h += '			</li>';
		 } else {
		 zl.ques_num++;
		 
		 var answer = eval('(' + questions[j].answer + ')'),
		 solution = eval('(' + questions[j].solution + ')');
		 
		 zl.page_num[zl.ques_num] = [slide_page, answer[l],options[l].type];
		 
		 h += '	<div class="swiper-slide">';
		 h += '		<li class="item-content">';
		 h += '			<div class="item-inner">' + ((zl.exam_type != '1')?zl.ques_num:(l + 1)) + '、' + options[l].description;
		 if (zl.exam_type == '1' && (options[l].type == '2' || options[l].type == '4')) {
		 h += '			<div style="margin-top:10px;"><a href="#" class="button button-danger button-fill pull-left" id="multi-answer">查看答案</a></div>';
		 }
		 h += '			</div>';
		 h += '		</li>';
		 
		 
		 var options_type = options[l].options;
		 if (options[l].type != '4') {
		 for (var t in options_type) {
		 h += '<li>';
		 h += '	<label class="label-checkbox item-content">';
		 h += '		<input type="checkbox" name="problem' + zl.ques_num + '" data-order="' + zl.ques_num + '" data-type="2" data-swiperChild="' + child_page + '" data-page="' + solution.length + '" value="' + t + '" question_id="' + question_id + '"  question_type="'+options[l].type+'">';
		 h += '		<div class="item-media"><i class="icon icon-form-checkbox">' + t + '</i></div>';
		 h += '		<div class="item-inner">';
		 h += options_type[t];
		 h += '		</div>';
		 h += '	</label>';
		 h += '</li>';
		 }
		 } else {
		 h += '<li><textarea row="4" style="background-color:#FFFFFF;border:2px solid #bbb;margin:auto;width:94%;"></textarea></li>';
		 }
		 h += '		<li class="item-content item-answer item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
		 h += '			<div class="item-inner">';
		 h += '				<div class="item-title"><span id="answerAnther' + zl.ques_num + '"></span><span id="answerSuccess' + zl.ques_num + '">正确答案 <span class="answer_success">' + answer[l] + '</span></span></div>';
		 h += '			</div>';
		 h += '		</li>';
		 h += '		<li class="item-content item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
		 h += '			<div class="item-inner item-cont-text">';
		 h += '				<div class="item-title">[试题解析]</div>';
		 h += '				<div>' + solution[l] + '</div>';
		 h += '			</div>';
		 h += '		</li>';
		 h += '	</div>';
		 }
		 l++;
		 }
		 } else {
		 h += '<li><textarea row="4" style="background-color:#FFFFFF;border:2px solid #bbb;margin:auto;width:94%;"></textarea></li>';
		 }
		 if (arrayCheck) {
		 h += '	</div>';
		 h += '</div>';
		 } else {
		 h += '			<li class="item-content item-answer item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
		 h += '				<div class="item-inner">';
		 h += '					<div class="item-title"><span id="answerAnther' + zl.ques_num + '"></span><span id="answerSuccess' + zl.ques_num + '">正确答案 <span class="answer_success">' + questions[j].answer + '</span></span></div>';
		 h += '				</div>';
		 h += '			</li>';
		 h += '			<li class="item-content item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
		 h += '				<div class="item-inner item-cont-text">';
		 h += '					<div class="item-title">[试题解析]</div>';
		 h += '					<div>' + questions[j].solution + '</div>';
		 h += '				</div>';
		 h += '			</li>';
		 h += '<div class="swiper-container swiper-problem-options"><div class="swiper-wrapper"></div></div>';
		 }
		 
		 h += '		</ul>';
		 h += '	</div>';
		 h += '</div>';
		 }
		 }
		 h += '</div>';
		 
		 $('.swiper-problem').html(h);
		 
		 /!* $('.swiper-problem>.swiper-wrapper>.swiper-slide').each(function(){
		 $(this).css('height',$(this).height());
		 }); *!/
		 
		 zl.swiperProblem = new Swiper('.swiper-problem', {
		 nextButton : '.swiper-button-next',
		 prevButton : '.swiper-button-prev',
		 pagination : '.swiper-pagination',
		 paginationType : 'fraction',
		 onInit : function (swiper) {
		 swiper.wrapper[0].style.height = swiper.slides[swiper.activeIndex].height + 'px';
		 },
		 onSlideChangeEnd : function (swiper) {
		 swiper.wrapper[0].style.height = swiper.slides[swiper.activeIndex].height + 'px';
		 }
		 });
		 
		 var mySwiper = new Swiper('.swiper-problem-options', {
		 nested : true
		 });
		 
		 if (zl.exam_type == '1') {
		 var callback = function(object) {
		 var order = object.attr('data-order'),
		 name = object.attr('name'),
		 type = object.attr('data-type'),
		 swiperChild = object.attr('data-swiperChild'),
		 pageNumber = object.attr('data-page'),
		 question_id = object.attr('question_id'),
		 val = $('input[name=\'' + name + '\']:checked').map(function (index, elem) {
		 return $(elem).val();
		 }).get().join(',');
		 
		 $('input[name=' + name + ']').attr('disabled', true);
		 
		 if (val == zl.page_num[order][1]) {
		 $('#answerAnther' + order).addClass('answer_success').text('回答正确！').siblings('span').hide();
		 
		 if (type == '2') {
		 if (pageNumber - 1 == mySwiper[swiperChild].activeIndex) {
		 zl.swiperProblem.slideNext();
		 } else {
		 mySwiper[swiperChild].slideNext();
		 }
		 } else {
		 zl.swiperProblem.slideNext();
		 }
		 } else if (typeof(val) == 'undefined' || val == '' || val == null) {
		 $('#answerAnther' + order).addClass('answer_error').text('未作答！');
		 
		 zl.problem.errorProblem(question_id);
		 } else {
		 $('#answerAnther' + order).addClass('answer_error').text('回答错误！');
		 
		 zl.problem.errorProblem(question_id);
		 }
		 var exam_id = $.tool.getUrl('exam_id');
		 localStorage.setItem('recordProblem' + exam_id, order);
		 $('.answer-s' + order).show();
		 };
		 $('.swiper-problem').on('change', 'input[type=radio],input[type=checkbox]', function () {
		 var type = $(this).attr('question_type');
		 if (type == '1') {
		 callback($(this));
		 }
		 });
		 $('.swiper-problem').on('click', '#multi-answer', function () {
		 var closeInput = $(this).closest('.swiper-slide').find('input').eq(0);
		 var textarea = $(this).closest('.swiper-slide').find('textarea');
		 if (typeof(closeInput) == 'object' && closeInput.length == 1) {
		 callback(closeInput);
		 } else if (typeof(textarea) == 'object' && textarea.length == 1){//简答题
		 $(this).closest(".swiper-slide").find(".item-answer-submit").find('span').eq(1).addClass('answer_success').text('参考答案解析');
		 $(this).closest(".swiper-slide").find(".item-answer-submit").show();
		 }
		 });
		 }
		 
		 var p_h = '<div class="row">';
		 if (zl.exam_type == '1') {//章节练习
		 for (var i = 0; i < (slide_page + 1); i++) {
		 var order = i + 1;
		 
		 p_h += '<div class="col-20"><div class="problemOne" onclick="$.zl.problem.pageIndexSwitch(' + i + ')">' + order + '</div></div>';
		 }
		 } else {//试卷
		 for (var i = 1; i <= zl.ques_num; i++) {
		 var order = zl.page_num[i];
		 
		 p_h += '<div class="col-20"><div class="problemOne" onclick="$.zl.problem.pageIndexSwitch(' + order[0] + ')">' + i + '</div></div>';
		 }
		 }
		 
		 p_h += '</div>';
		 
		 $('#problem-number').text('/' + zl.ques_num + '道');
		 $('#answer-cont').html(p_h);
		 
		 if (zl.exam_type == '1') {//章节练习
		 var exam_id = $.tool.getUrl('exam_id');
		 var record_id = localStorage.getItem('recordProblem' + exam_id);
		 if (record_id != null &&  typeof(zl.page_num[record_id]) !='undefined' ) {
		 $.confirm('跳转到上次做题进度第'+(Number(zl.page_num[record_id][0])+1)+'题？', function () {
		 $.zl.problem.pageIndexSwitch(zl.page_num[record_id][0]);
		 });
		 }
		 }
		 
		 },*/
		list : function (transData) {
			var str_start = '<div class="swiper-wrapper">',
				slide_page = -1,
				child_page = -1;
			
			var sliders_arr = [];//存放所有第一级swiper-slider
			
			zl.ques_num = 0;
			zl.page_num = {};
			
			for (var i = 0, iLen = transData.length; i < iLen; i++) {
				var questions = transData[i].questions;
				if (questions == null || questions.length == 0) {
					continue;
				}
				for (var j = 0, jLen = questions.length; j < jLen; j++) {
					var question_id = questions[j].question_id,
						h = '';
					h += '<div class="swiper-slide" question_id="' + question_id + '" data-index="'+(slide_page+1)+'">';
					if (j == 0) {
						h += '	<div class="content-block-title">' + transData[i].title + '</div>';
					}
					
					/* 选项 */
					var options = JSON.parse(questions[j].options),
						type = questions[j].type,//1-单选 2-多选 3-不定项 4-简答
						l = 0,
						arrayCheck = type == '3'?true:false;/*$.tool.typeFormet(options) == 'Array'*/;
					
					zl.ques_num++;
					slide_page++;
					
					h += '	<div class="list-block media-list">';
					h += '		<ul>';
					/* 题目 */
					h += '			<li class="item-content">';
					h += '				<div class="item-inner">' + (arrayCheck ? '' : ((zl.exam_type != '1'?zl.ques_num:(j + 1)) + '、')) + questions[j].description;
					if (zl.exam_type == '1' && (type == '4' || type == '2')) {
						h += '				<div style="margin-top:10px;"><a href="#" class="button button-danger button-fill pull-left" id="multi-answer">查看答案</a></div>';
					}
					h += '				</div>';
					h += '			</li>';
					
					
					if (arrayCheck) {
						//不定选项子swiper开始
						zl.ques_num--;
						child_page++;
						h += '<div class="swiper-container swiper-problem-options" id="swiper-problem-options'+slide_page+'"><div class="swiper-wrapper">';
					} else {
						zl.page_num[zl.ques_num] = [slide_page, questions[j].answer,type];
					}
					if (type != '4') {//非简答题
						for (var k in options) {
							if (type == '1' || type == '2') {
								//单选、多选的选项
								h += '			<li>';
								h += '				<label class="label-checkbox item-content">';
								h += '					<input type="' + zl.typeOr[type] + '" name="problem' + zl.ques_num + '" data-order="' + zl.ques_num + '" data-type="1" value="' + k + '"  question_id="' + question_id + '"  question_type="'+type+'">';
								h += '					<div class="item-media"><i class="icon icon-form-checkbox">' + k + '</i></div>';
								h += '					<div class="item-inner">';
								h += options[k];
								h += '					</div>';
								h += '				</label>';
								h += '			</li>';
							} else {
								//不定选项的子swiper
								zl.ques_num++;
								
								var answer = JSON.parse(questions[j].answer),
									solution = JSON.parse(questions[j].solution);
								
								zl.page_num[zl.ques_num] = [slide_page, answer[l],options[l].type];
								
								h += '	<div class="swiper-slide">';
								h += '		<li class="item-content">';
								h += '			<div class="item-inner">' + ((zl.exam_type != '1')?zl.ques_num:(l + 1)) + '、' + options[l].description;
								if (zl.exam_type == '1' && (options[l].type == '2' || options[l].type == '4')) {
									h += '			<div style="margin-top:10px;"><a href="#" class="button button-danger button-fill pull-left" id="multi-answer">查看答案</a></div>';
								}
								h += '			</div>';
								h += '		</li>';
								
								
								var options_type = options[l].options;
								if (options[l].type != '4') {
									for (var t in options_type) {
										h += '<li>';
										h += '	<label class="label-checkbox item-content">';
										h += '		<input type="checkbox" name="problem' + zl.ques_num + '" data-order="' + zl.ques_num + '" data-type="2" data-swiperChild="' + child_page + '" data-page="' + solution.length + '" value="' + t + '" question_id="' + question_id + '"  question_type="'+options[l].type+'">';
										h += '		<div class="item-media"><i class="icon icon-form-checkbox">' + t + '</i></div>';
										h += '		<div class="item-inner">';
										h += options_type[t];
										h += '		</div>';
										h += '	</label>';
										h += '</li>';
									}
								} else {
									h += '<li><textarea row="4" style="background-color:#FFFFFF;border:2px solid #bbb;margin:auto;width:94%;"></textarea></li>';
								}
								h += '		<li class="item-content item-answer item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
								h += '			<div class="item-inner">';
								h += '				<div class="item-title"><span id="answerAnther' + zl.ques_num + '"></span><span id="answerSuccess' + zl.ques_num + '">正确答案 <span class="answer_success">' + answer[l] + '</span></span></div>';
								h += '			</div>';
								h += '		</li>';
								h += '		<li class="item-content item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
								h += '			<div class="item-inner item-cont-text">';
								h += '				<div class="item-title">[试题解析]</div>';
								h += '				<div>' + solution[l] + '</div>';
								h += '			</div>';
								h += '		</li>';
								h += '	</div>';
							}
							l++;
						}
					} else {
						//简单题
						h += '<li><textarea row="4" style="background-color:#FFFFFF;border:2px solid #bbb;margin:auto;width:94%;"></textarea></li>';
					}
					if (arrayCheck) {
						//不定选项子swiper结束
						h += '	</div>';
						h += '</div>';
					} else {
						h += '			<li class="item-content item-answer item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
						h += '				<div class="item-inner">';
						h += '					<div class="item-title"><span id="answerAnther' + zl.ques_num + '"></span><span id="answerSuccess' + zl.ques_num + '">正确答案 <span class="answer_success">' + questions[j].answer + '</span></span></div>';
						h += '				</div>';
						h += '			</li>';
						h += '			<li class="item-content item-answer-submit answer-s' + zl.ques_num + '" style="display:none;">';
						h += '				<div class="item-inner item-cont-text">';
						h += '					<div class="item-title">[试题解析]</div>';
						h += '					<div>' + questions[j].solution + '</div>';
						h += '				</div>';
						h += '			</li>';
						h += '<div class="swiper-container swiper-problem-options"><div class="swiper-wrapper"></div></div>';
					}
					
					h += '		</ul>';
					h += '	</div>';
					h += '</div>';
					
					sliders_arr.push(h);
				}
			}
			var str_end = '</div>';
			
			//swiper参数设置
			var max_len = 16;
			zl.swiper_problem_parm = {
				max_sliders_num: max_len,
				front_point: max_len*(1/4),
				back_point: max_len*(3/4),
				btw: max_len*(1/4),
				data_len: sliders_arr.length,
				need_refresh: (sliders_arr.length > max_len) ? true : false,
				parent_sliders: sliders_arr, //保存整个父级sliders数组
				init_child_swiper: {} //已经初始化的子swiper
			};
			//初始化swiper
			var init_slide_index = 0;
			$('.swiper-problem').html(str_start + (zl.swiper_problem_parm.parent_sliders).slice(init_slide_index, max_len+init_slide_index).join('') + str_end);
			zl.swiperProblem = new Swiper('.swiper-problem', {
				speed: 0,
				nextButton : '.swiper-button-next',
				prevButton : '.swiper-button-prev',
				pagination : '.swiper-pagination',
				paginationType : 'custom',
				paginationCustomRender: function (swiper, current, total) {
					return (parseInt($(swiper.slides[current-1]).data('index'))+1) + ' / ' + zl.swiper_problem_parm.data_len;
				},
				onInit: function (swiper) {
					$.zl.problem.initChildSwiper(swiper);//初始化子滑块
				},
				onSlideChangeEnd: function(swiper) {
					$.zl.problem.initChildSwiper(swiper);//初始化子滑块
					if (!zl.swiper_problem_parm.need_refresh) return;//少于最大slides数，不需要更新
					$.zl.problem.savePreviousSlide(swiper);//保存上一个滑块dom,离开时还要保存一次当前滑块
					//某些节点处更新swiper
					var activeIndex = swiper.activeIndex,
						begin_slide = swiper.slides[0],
						begin_slide_index = $(begin_slide).data('index'),
						end_slide = swiper.slides[zl.swiper_problem_parm.max_sliders_num - 1],
						end_slide_index = $(end_slide).data('index');
					if (activeIndex + 1 == zl.swiper_problem_parm.front_point) {
						if (begin_slide_index == 0) {
							return;
						}
						var temp_prepend_arr_len = 0;
						for (var j = begin_slide_index - 1; j >= begin_slide_index - (zl.swiper_problem_parm.btw - 1); j--) {
							if (j >= 0) {
								temp_prepend_arr_len++;
								console.log('j',j)
								swiper.prependSlide((zl.swiper_problem_parm.parent_sliders)[j]);
							}
						}
						var remove_right_slides = [],
							temp_len = zl.swiper_problem_parm.max_sliders_num + temp_prepend_arr_len - 1;
						for (var k = 0, kL = temp_prepend_arr_len; k < kL; k++) {
							remove_right_slides.push(temp_len - k);
						}
						swiper.removeSlide(remove_right_slides);//移除数组
					} else if (activeIndex + 1 == zl.swiper_problem_parm.back_point) {
						if (zl.swiper_problem_parm.data_len > end_slide_index + 1) {
							var temp_append_arr = (zl.swiper_problem_parm.parent_sliders).slice(end_slide_index + 1, end_slide_index + zl.swiper_problem_parm.btw);//追加到右边的slide数组
							var remove_left_slides = [];//需要移除左边的slide个数
							for (var i = 0, iL = temp_append_arr.length; i < iL; i++) {
								remove_left_slides.push(i);
							}
							swiper.appendSlide(temp_append_arr);//加进来sliders数组
							swiper.removeSlide(remove_left_slides);//移除数组
						}
					}
				}
			});
			
			//章节练习
			if (zl.exam_type == '1') {
				var callback = function(object) {
					var order = object.attr('data-order'),//题号
						name = object.attr('name'),
						type = object.attr('data-type'),
						swiperChild = object.attr('data-swiperChild'),
						pageNumber = object.attr('data-page'),
						question_id = object.attr('question_id'),
						val = $('input[name=\'' + name + '\']:checked').map(function (index, elem) {
							return $(elem).val();
						}).get().join(',');
					
					$('input[name=' + name + ']').attr('disabled', true);
					
					if (val == zl.page_num[order][1]) {
						$('#answerAnther' + order).addClass('answer_success').text('回答正确！').siblings('span').hide();
						//更新答题卡数据和题号样式
						zl.page_num.ques_ok_num++;
						//$('#answer-cont')
						if (type == '2') {
							if (pageNumber - 1 == mySwiper[swiperChild].activeIndex) {
								zl.swiperProblem.slideNext();
							} else {
								mySwiper[swiperChild].slideNext();
							}
						} else {
							zl.swiperProblem.slideNext();
						}
					} else if (typeof(val) == 'undefined' || val == '' || val == null) {
						$('#answerAnther' + order).addClass('answer_error').text('未作答！');
						
						zl.problem.errorProblem(question_id);
					} else {
						$('#answerAnther' + order).addClass('answer_error').text('回答错误！');
						
						zl.problem.errorProblem(question_id);
					}
					var exam_id = $.tool.getUrl('exam_id');
					localStorage.setItem('recordProblem' + exam_id, order);//做题记录
					$('.answer-s' + order).show();//答案和试题解析
				};
				$('.swiper-problem').on('change', 'input[type=radio],input[type=checkbox]', function () {
					var type = $(this).attr('question_type');
					if (type == '1') {
						callback($(this));
					}
				});
				$('.swiper-problem').on('click', '#multi-answer', function () {
					var closeInput = $(this).closest('.swiper-slide').find('input').eq(0);
					var textarea = $(this).closest('.swiper-slide').find('textarea');
					if (typeof(closeInput) == 'object' && closeInput.length == 1) {
						callback(closeInput);
					} else if (typeof(textarea) == 'object' && textarea.length == 1){//简答题
						$(this).closest(".swiper-slide").find(".item-answer-submit").find('span').eq(1).addClass('answer_success').text('参考答案解析');
						$(this).closest(".swiper-slide").find(".item-answer-submit").show();
					}
				});
			}
			
			//答题卡
			var p_h = '<div class="row">';
			if (zl.exam_type == '1') {//章节练习
				for (var i = 0; i < (slide_page + 1); i++) {
					var order = i + 1;
					
					p_h += '<div class="col-20"><div class="problemOne" onclick="$.zl.problem.pageIndexSwitch(' + i + ')">' + order + '</div></div>';
				}
			} else {//试卷
				for (var i = 1; i <= zl.ques_num; i++) {
					var order = zl.page_num[i];
					
					p_h += '<div class="col-20"><div class="problemOne" onclick="$.zl.problem.pageIndexSwitch(' + order[0] + ')">' + i + '</div></div>';
				}
			}
			
			p_h += '</div>';
			
			$('#problem-number').text('/' + zl.ques_num + '道');//答题卡上显示总共有多少个题目
			$('#answer-cont').html(p_h);
			
			if (zl.exam_type == '1') {//章节练习
				var exam_id = $.tool.getUrl('exam_id');
				var record_id = localStorage.getItem('recordProblem' + exam_id) || -1;//题号默认-1，从1开始
				var record_num = !!zl.page_num[record_id] ? zl.page_num[record_id][0] : -1;//slide号，从0开始
				if (record_id > 1 && record_num != -1) {
					$.confirm('跳转到上次做题进度第'+record_id+'题？', function () {
						$.zl.problem.pageIndexSwitch(record_num);
					});
				}
				/*var record_num = typeof(zl.page_num[record_id]) !='undefined' ? (Number(zl.page_num[record_id][0])+1) : 0;
				 if (record_id != null &&  typeof(zl.page_num[record_id]) !='undefined' && record_num > 1) {
				 $.confirm('跳转到上次做题进度第'+record_num+'题？', function () {
				 $.zl.problem.pageIndexSwitch(zl.page_num[record_id][0]);
				 });
				 }*/
			}
		},
		initChildSwiper : function (swiper) {
			//初始化子swiper
			var child_swiper_id = '#swiper-problem-options'+$(swiper.slides[swiper.activeIndex]).data('index');
			if (typeof zl.swiper_problem_parm.init_child_swiper[child_swiper_id] == 'undefined' && $(child_swiper_id).length > 0) {
				var childSwiper = new Swiper(child_swiper_id, {
					nested : true
				});
				zl.swiper_problem_parm.init_child_swiper[child_swiper_id] = childSwiper;
			}
		},
		savePreviousSlide : function (swiper) {
			//保存上一个滑块dom
			var previous_slide = swiper.slides[swiper.previousIndex];
			var previous_slide_index = $(previous_slide).data('index');
			(zl.swiper_problem_parm.parent_sliders)[previous_slide_index] = previous_slide;
		},
		submitTip : function () {
			var ok_answer = 0;
			
			for (var i = 0; i < zl.ques_num; i++) {
				var order = i + 1,
					name = 'problem' + order;
				if (zl.page_num[order][2] == '4') {//简答题不统计
					$('#answerSuccess' + order).addClass('answer_success').text('参考答案解析');
					$('#answer-cont .problemOne').eq(i).addClass('answer_empty');
					continue;
				}
				var question_id = $('input[name=\'' + name + '\']:checked').attr('question_id');
				var val = $('input[name=\'' + name + '\']:checked').map(function (index, elem) {
					return $(elem).val();
				}).get().join(',');
				if (val == zl.page_num[order][1]) {
					ok_answer++;
					$('#answer-cont .problemOne').eq(i).addClass('answer_success');
					$('#answerAnther' + order).addClass('answer_success').text('回答正确！').siblings('span').hide();
				} else if (typeof(val) == 'undefined' || val == '' || val == null) {
					$('#answerAnther' + order).addClass('answer_error').text('未作答！');
					$('#answer-cont .problemOne').eq(i).addClass('answer_null');
					
					zl.problem.errorProblem(question_id);
				} else {
					$('#answer-cont .problemOne').eq(i).addClass('answer_error');
					$('#answerAnther' + order).addClass('answer_error').text('回答错误！');
					
					zl.problem.errorProblem(question_id);
				}
			}
			
			$.confirm('确认提交?', function () {
				$('#answer-number').text(ok_answer);
				$('input[type=radio],input[type=checkbox]').attr('disabled', true)
				$('.popup-submit-ok').removeClass('modal-out modal-in').addClass('modal-on').show();
				$('#submitTip').hide();
				$('#submitData,.item-answer-submit').show();
			});
		},
		submitData : function () {
			if (zl.exam_type == '1') {
				/*var ok_answer = 0;
				 
				 for (var i = 0; i < zl.ques_num; i++) {
				 var order = i + 1,
				 name = 'problem' + order;
				 if (zl.page_num[order][2] == '4') {//简答题不统计
				 $('#answerSuccess' + order).addClass('answer_success').text('参考答案解析');
				 continue;
				 }
				 var val = $('input[name=\'' + name + '\']:checked').map(function (index, elem) {
				 return $(elem).val();
				 }).get().join(',');
				 
				 if (val == zl.page_num[order][1]) {
				 ok_answer++;
				 }
				 }
				 
				 $('#answer-number').text(ok_answer);*/
				
				$('#answer-number').text(zl.page_num.ques_ok_num);
			}
			
			$('.popup-submit-ok').removeClass('modal-out modal-in').addClass('modal-on').show();
		},
		pageIndexSwitch : function (transPageIndex) {
			$('.popup-submit-ok').hide();
			if (transPageIndex != 'hide') {
				var parent_arr = zl.swiper_problem_parm.parent_sliders,
					lastIndex = transPageIndex,
					max_num = zl.swiper_problem_parm.max_sliders_num;
				if (parent_arr.length > max_num) {
					var n = transPageIndex,
						max = zl.swiper_problem_parm.max_sliders_num,
						left = zl.swiper_problem_parm.front_point,
						total = zl.swiper_problem_parm.data_len;
					temp_arr = [n-left, n+(max-left-1)],
						res = temp_arr;
					if (temp_arr[0] < 0) {
						res = [0, temp_arr[1]-temp_arr[0]];
					} else if (temp_arr[1] > total) {
						res = [temp_arr[0]-(temp_arr[1]-total), total];
					}
					zl.swiperProblem.appendSlide(parent_arr.slice(res[0], res[1]+1));
					var num_arr = [];
					for (var i = 0, iL = zl.swiper_problem_parm.max_sliders_num; i < iL; i++) {
						num_arr.push(i);
					}
					zl.swiperProblem.removeSlide(num_arr);
					lastIndex = transPageIndex - res[0];
				}
				zl.swiperProblem.slideTo(lastIndex);
			}
		},
		collectProblem : function () {
			var subject = zl.question.cacheSubject();
			if (subject == false) {
				return;
			}
			var subject_id = subject.subject_id,
				id = $.zl.swiperProblem.slides.eq($.zl.swiperProblem.activeIndex).attr('question_id'),
				collectProblemLoca = localStorage.getItem('collectProblem' + subject_id),
				collectProblem = collectProblemLoca == null ? '' : collectProblemLoca,
				arry = collectProblem.indexOf(id) >= 0 ?
					collectProblem : collectProblem == ''?
						typeof(id) == 'undefined'?'':id :
						typeof(id) == 'undefined'?collectProblem:collectProblem + ',' + id;
			
			localStorage.setItem('collectProblem' + subject_id, arry);
			
			$.toast('收藏成功');
		},
		errorProblem : function (transId) {
			var subject = zl.question.cacheSubject();
			if (subject == false) {
				return;
			}
			var subject_id = subject.subject_id,
				errorProblemLoca = localStorage.getItem('errorProblem' + subject_id),
				errorProblem = errorProblemLoca == null ? '' : errorProblemLoca,
				arry = errorProblem.indexOf(transId) >= 0 ?
					errorProblem : errorProblem == ''?
						typeof(transId) == 'undefined'?'':transId :
						typeof(transId) == 'undefined'?errorProblem:errorProblem + ',' + transId;
			
			localStorage.setItem('errorProblem' + subject_id, arry);
		},
		problemPage : function (transType) {
			$.tool.load('../page/problem_collect.html', 'record_type=' + transType);
		}
	};
	
	zl.problemCollect = {
		list : function (questions) {
			var h = '<div class="swiper-wrapper">';
			
			for (var j = 0, jLen = questions.length; j < jLen; j++) {
				h += '<div class="swiper-slide">';
				
				/* 选项 */
				var options = eval('(' + questions[j].options + ')'),
					type = questions[j].type,
					l = 0,
					arrayCheck = type == '3'?true:false;/*$.tool.typeFormet(options) == 'Array'*/
				
				h += '	<div class="list-block media-list">';
				h += '		<ul>';
				/* 题目 */
				h += '			<li class="item-content">';
				h += '				<div class="item-inner">' + (arrayCheck ? '' : (j + 1) + '、') + questions[j].description + '</div>';
				h += '			</li>';
				
				if (arrayCheck) {
					h += '<div class="swiper-container swiper-problem-collect"><div class="swiper-wrapper">';
				}
				if (type != '4') {
					for (var k in options) {
						if (type == '1' || type == '2') {
							h += '			<li>';
							h += '				<label class="label-checkbox item-content">';
							h += '					<input type="' + zl.typeOr[type] + '" ' + (questions[j].answer.indexOf(k) >= 0 ? 'checked disabled' : 'disabled') + '>';
							h += '					<div class="item-media"><i class="icon icon-form-checkbox">' + k + '</i></div>';
							h += '					<div class="item-inner">';
							h += options[k];
							h += '					</div>';
							h += '				</label>';
							h += '			</li>';
						} else if (type == '3') {
							var answer = eval('(' + questions[j].answer + ')'),
								solution = eval('(' + questions[j].solution + ')');
							
							h += '	<div class="swiper-slide">';
							h += '		<li class="item-content">';
							h += '			<div class="item-inner">' + (l + 1) + '、' + options[l].description + '</div>';
							h += '		</li>';
							
							var options_type = options[l].options;
							if (options[l].options != '4') {
								for (var t in options_type) {
									h += '<li>';
									h += '	<label class="label-checkbox item-content">';
									h += '		<input type="checkbox" value="' + t + '" ' + (answer[l].indexOf(t) >= 0 ? 'checked disabled' : 'disabled') + '>';
									h += '		<div class="item-media"><i class="icon icon-form-checkbox">' + t + '</i></div>';
									h += '		<div class="item-inner">';
									h += options_type[t];
									h += '		</div>';
									h += '	</label>';
									h += '</li>';
								}
							}
							h += '		<li class="item-content item-answer item-answer-submit">';
							h += '			<div class="item-inner">';
							h += '				<div class="item-title"><span>正确答案 <span class="answer_success">' + answer[l] + '</span></span></div>';
							h += '			</div>';
							h += '		</li>';
							h += '		<li class="item-content item-answer-submit">';
							h += '			<div class="item-inner item-cont-text">';
							h += '				<div class="item-title">[试题解析]</div>';
							h += '				<div>' + solution[l] + '</div>';
							h += '			</div>';
							h += '		</li>';
							h += '	</div>';
						}
						l++;
					}
				}
				if (arrayCheck) {
					h += '	</div>';
					h += '</div>';
				} else {
					h += '			<li class="item-content item-answer item-answer-submit">';
					h += '				<div class="item-inner">';
					h += '					<div class="item-title"><span>正确答案 <span class="answer_success">' + questions[j].answer + '</span></span></div>';
					h += '				</div>';
					h += '			</li>';
					h += '			<li class="item-content item-answer-submit">';
					h += '				<div class="item-inner item-cont-text">';
					h += '					<div class="item-title">[试题解析]</div>';
					h += '					<div>' + questions[j].solution + '</div>';
					h += '				</div>';
					h += '			</li>';
					h += '<div class="swiper-container swiper-problem-collect"><div class="swiper-wrapper"></div></div>';
				}
				
				h += '		</ul>';
				h += '	</div>';
				h += '</div>';
			}
			
			h += '</div>';
			
			$('.problem-collect-swiper').html(h);
			
			var swiper1 = new Swiper('.problem-collect-swiper', {
				nextButton : '.swiper-button-next',
				prevButton : '.swiper-button-prev',
				pagination : '.swiper-pagination',
				paginationType : 'fraction',
				onInit : function (swiper) {
					swiper.wrapper[0].style.height = swiper.slides[swiper.activeIndex].height + 'px';
				},
				onSlideChangeEnd : function (swiper) {
					swiper.wrapper[0].style.height = swiper.slides[swiper.activeIndex].height + 'px';
				}
			});
			
			var swiper2 = new Swiper('.swiper-problem-collect', {
				nested : true
			});
		}
	};
	zl.center = {
		proxyCommodity:function(data) {
			if (typeof(data) != 'object' || data.length == 0) {
				return;
			}
			var h = '';
			h += '<div class="card center-card-main"><div class="card-header">您可能感兴趣</div><div class="card-content row">';
			for (var j = 0, jLen = data.length; j < jLen; j++) {
				h += "	<a class=\"col-50 item-content\" href=\"#\" onclick=\"javascript:window.location.href='" + data[j].commodity_url + "'\">"
				h += '		<img src="' + data[j].cover_url + '"/>';
				h += '		<li>' + data[j].title + '</li>';
				h += '	</a>';
			}
			h += '</div><div class="card-footer"></div></div>';
			$('#proxy_commodity').html(h);
		}
	};
	$.zl = zl;
})(Zepto);

$(function () {
	$.zl.pageIdStart($.zl.pageId);
	
	$(window).resize(function () {
		if ($.zl.pageId == 'page-vadio-course') {
			$.zl.vadioPlayHeight();
		}
		
		if ($.zl.pageId == 'page-main') {
			$.zl.main.bannerW();
		}
	});
	
	$(document).on('click', '.prompt-code', function () {
		$.modal({
			title : '请输入激活码',
			text : '<input id="promptCode" type="text" placeholder="请输入16位激活码" maxlength="16"/>',
			buttons : [{
				text : '取消'
			}, {
				text : '激活',
				onClick : function () {
					$.zl.activation();
				}
			}
			]
		})
	});
	
	//当前位置页
	$(document).on("pageAnimationEnd", function (e, pageId, page) {
		$.hidePreloader();
		
		$.zl.pageId = pageId;
		
		$.zl.pageIdStart(pageId);
		
		if (pageId != 'page-vadio-course') {
			return;
		}
		
		var preloader = $('.infinite-scroll-preloader');
		
		$(page).on('infinite', function () {
			// 如果正在加载，则退出
			if ($.zl.loading)
				return;
			
			if ($(this).find('.tabs div.active').attr('id') == "tab3") {
				// 设置flag
				$.zl.loading = true;
				
				var lastIndex = $('#estimationList').find('.card').length,
					totle = $('#estimationTotal').attr('num'),
					pageNum = parseInt(lastIndex / 10) + 1;
				
				if (pageNum > 1 && lastIndex != totle) {
					preloader.show();
					$.zl.estimationModel(pageNum, true);
				} else {
					preloader.hide();
					$.zl.loading = false;
				}
			}
		});
	});
});
